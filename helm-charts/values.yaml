replicaCount: 1

image:
  repository: ghcr.io/jfbourner/django-gunicorn-nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Set secrets.
DJANGO_SECRET_KEY: "A123456789"
OPENAI_API_KEY: "change-me"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8000
  targetPort: 8000

ingress:
  enabled: true
  annotations: {
     cert-manager.io/cluster-issuer: letsencrypt-dev,
     nginx.ingress.kubernetes.io/rewrite-target: /
  }
  className: nginx

  hosts:
    - host: dev.jackbourner.co.uk
      paths:
        - path: /python
          pathType: Prefix
  tls:
    - secretName: dev-tls
      hosts:
        - dev.jackbourner.co.uk

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

sidecar:
  nginx:
    port: 8080
    probe:
      path: /
      enabled: false
      initialDelaySeconds: 10
      livenessTimeOut: 10