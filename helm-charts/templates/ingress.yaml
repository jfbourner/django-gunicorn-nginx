{{- if .Values.ingress.enabled -}}
{{- $fullName := include "helm-charts.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: reverse-proxy-depl
  labels:
    app.kubernetes.io/instance: reverse-proxy-depl
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: reverse-proxy-depl
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dev
    meta.helm.sh/release-name: python-app
    meta.helm.sh/release-namespace: development
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: reverse-proxy-svc
                port:
                  number: 8080
              {{- else }}
              serviceName: reverse-proxy-depl
              servicePort: 8080
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dev
    meta.helm.sh/release-name: python-app
    meta.helm.sh/release-namespace: development
  labels:
    app.kubernetes.io/instance: reverse-proxy-depl
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: reverse-proxy-depl
  name: static-files-ing
  namespace: development
spec:
  ingressClassName: nginx
  rules:
  - host: dev.jackbourner.co.uk
    http:
      paths:
      - backend:
          service:
            name: reverse-proxy-svc
            port:
              number: 8080
        path: /static/*
        pathType: Prefix
  tls:
  - hosts:
    - dev.jackbourner.co.uk
    secretName: dev-tls
status:
  loadBalancer: {}